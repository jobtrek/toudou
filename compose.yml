services:
  pgsql:
    image: postgres:17.6
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
      - DB_PGRST_AUTHENTICATOR_ROLE=${DB_PGRST_AUTHENTICATOR_ROLE}
      - DB_PGRST_AUTHENTICATOR_PASS=${DB_PGRST_AUTHENTICATOR_PASS}
    volumes:
      - pgsql-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - toudou-internal
    #ports:
    #  - "5432:5432"
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-q"
        - "-d"
        - "${POSTGRES_DB}"
        - "-U"
        - "${POSTGRES_USER}"
      retries: 3
      timeout: 5s

  on-startup-migration:
    image: sqitch/sqitch
    environment:
      - SQITCH_TARGET="db:pg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgsql:5432/${POSTGRES_DB}"
    volumes:
      - "./migrations:/repo"
    command:
      - "deploy"
    networks:
      - toudou-internal
    depends_on:
      pgsql:
        condition: service_healthy

  postgrest:
    image: postgrest/postgrest:v13.0.6
    ports:
      - "${POSTGREST_API_PORT:-3000}:3000"
      - "${POSTGGEST_ADMIN_PORT:-3001}:3001"
    networks:
      - toudou-internal
    environment:
      - PGRST_JWT_SECRET="${JWT_SECRET}"
      - PGRST_DB_URI=postgres://${DB_PGRST_AUTHENTICATOR_ROLE}:${DB_PGRST_AUTHENTICATOR_PASS}@pgsql:5432/${POSTGRES_DB}
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      - PGRST_DB_SCHEMAS=${DB_SCHEMA}
      - PGRST_OPENAPI_SERVER_PROXY_URI=${APP_URL:-http://localhost:3000/}
      - PGRST_OPENAPI_MODE=ignore-privileges
      - PGRST_ADMIN_SERVER_PORT=3001
    depends_on:
      pgsql:
        condition: service_healthy
      on-startup-migration:
        condition: service_completed_successfully

  swagger-ui:
    image: swaggerapi/swagger-ui:v5.29.0
    ports:
      - "${SWAGGER_UI_PORT:-8080}:8080"
    environment:
      - API_URL=${APP_URL:-http://localhost:3000/}

volumes:
  pgsql-data:

networks:
  toudou-internal:
